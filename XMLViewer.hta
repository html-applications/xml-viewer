<html>
<head>
<meta http-equiv=content-type content="text-html; charset=utf-8">
<meta http-equiv=MSThemeCompatible content=yes>
<hta:application
	id=idXMLViewer
	applicationName=XMLViewer
	icon=msxml3.dll
	innerBorder=no
	contextMenu=no
	version=2.3.0
	author=mozers™, mozers@mail.ru, icq#256106175
>
<style type="text/css">
	*             {font:8pt MS Shell Dlg; cursor:default;}                              /*общие определения*/
	span.text     {color:black;}                                                        /*текст пункта списка*/
	span.name     {color:buttonshadow; font-weight:bold;}                               /*имя узла*/
	span.value    {font:bold 10pt Verdana; cursor:text; margin-left:4px; color:black;}  /*текст узла*/
	span.comment  {font:bold 10pt Verdana; cursor:text; margin-left:4px; color:#999999} /*комментарий*/
	span.aname    {color:red; margin-left:4px;}                                         /*имя атрибута*/
	span.avalue   {color:#3300FC;}                                                      /*значение атрибута*/

	li            {list-style-type:circle; color:threeddarkshadow;}            /*обычный пункт списка*/
	li.hidden     {list-style-type:square; background-color:#FFFF99;}          /*выделенный пункт списка*/

	li.srctext    {list-style-type:decimal; color:threeddarkshadow;}           /*пункт списка для ошибочного файла*/
	li.reason     {list-style-type:none; font:italic 8pt Georgia; color:blue;} /*текст пояснения о причине ошибки*/
	span.srctext  {color:black; font:bold 10pt Courier New;}                   /*текст строк ошибочного файла*/
	span.errtext  {color:red; font:bold 10pt Courier New;}                     /*текст строки после символа с ошибкой*/

	table.help    {position:relative; top:-8px; left:-8px; background-color:#FFFFCC; border:1px solid #999900;}                              /*подсказка*/
	div.help      {position:absolute; top:40px; left:expression(document.body.offsetWidth-idHelp.offsetWidth-40); background-color:#C0C0C0;} /*подсказка тень*/
	.help td.key  {font:normal 8pt Arial Black; color:#993300;}                                                                              /*подсказка клавиши*/
	.help td.text {font:8pt MS Shell Dlg; white-space:nowrap;}                                                                               /*подсказка текст*/
</style>
<script type="text/javascript">
	// Возвращает массив дочерних узлов указанного объекта obj имеющих тег tag
	function Childs (obj, tag) {
		var arr = [];
		if ( (obj) && (obj.children) ) {
			for(var i = 0, e; e = obj.children[i++];) {
				if (e.tagName == tag) arr.push(e);
			}
		}
		return arr;
	}

	// Возвращает ближайший родительский (относительно obj) объект с тегом parentTagName
	function GetParent(obj, parentTagName) {
		if (obj.tagName == 'BODY') return;
		return (obj.tagName==parentTagName) ? obj : GetParent(obj.parentNode, parentTagName);
	}

	// Создает и возвращает дочерний (относительно oParent) элемент
	// с заданным тегом sTag, и произвольными свойствами aProps
	function CreateElement(oParent, sTag, aProps) {
		var newElement = oParent.appendChild(document.createElement(sTag));
		for (var prop in aProps) newElement[prop] = aProps[prop];
		return newElement;
	}

	// Выделение строки списка objLI и скрытие дочерних строк (снятие выделения и скрытия)
	function ShowHide(objLI) {
		var child_items = Childs(objLI, 'UL');
		if (child_items.length > 0) {
			var hide = objLI.className != 'hidden';
			// смена стиля строки назначением|снятием класса 'hidden'
			objLI.className = (hide) ? 'hidden' : '';
			// скрытие|показ дочерних строк
			for(var i = 0, ci; ci = child_items[i++];) {
				ci.style.display = (hide) ? 'none' : '';
			}
		}
	}

	// Рекурсивный парсинг узла Node с записью содержимого в пункт списка Item
	function ParseNode(Node, Item) {
		function Trim(str){
			return str.replace(/[\r\n]+/g, ' ').replace(/\s+/g, ' ').replace(/^\s+/, '').replace(/\s+$/, '');
		}
		if (Node.nodeValue) {
			CreateElement(Item, 'SPAN', {className: (Node.nodeName=='#text')?'value':'comment', innerText:Trim(Node.nodeValue)}); // Value | comment
		} else {
			var oLI = CreateElement(Item, 'LI');
			CreateElement(oLI, 'SPAN', {className:'name', innerText:Node.nodeName}); // Name
			if (Node.attributes) {
				for (var i=0, nodeAttr; nodeAttr = Node.attributes[i++];) {
					CreateElement(oLI, 'SPAN', {className:'aname', innerText:nodeAttr.nodeName}); // Attribute Name
					CreateElement(oLI, 'SPAN', {className:'text', innerText:':'});
					CreateElement(oLI, 'SPAN', {className:'avalue', innerText:Trim(nodeAttr.nodeValue)}); // Attribute Value
				}
			}
		}
		for (var i=0, nodeChild; nodeChild = Node.childNodes[i++];) {
			if (!nodeChild.nodeValue) oLI.style.color = '#990066';
			ParseNode (nodeChild, (nodeChild.nodeValue) ? oLI : CreateElement(oLI, 'UL'));
		}
	}

	// Обработка нажатий на клавиши
	function OnKeyDown(){
		switch(event.keyCode){
			case 27: // Esc
				self.close();
				break;
			case 112: // F1
				idHelp.style.display = "";
				setTimeout('idHelp.style.display="none"', 4000); // через 4 секунды скрываем подсказку
				break;
			case 121: // F10
				SetFileAssociation();
		}
	}

	// Замена стандартной ф-ции window.resizeTo, которая иногда может вызывать ошибку "Access is Denied"
	function WindowResizeTo(w, h) {
		try { 
			window.resizeTo(w, h); 
		} catch(e) {
			setTimeout(function() {WindowResizeTo(w, h)}, 1000);
		}
	}

	// Настройка размера окна (исходя из размера обрамляющей список таблицы idRange)
	function WindowSetSize(){
		var width_max = screen.width - 200;
		var height_max = screen.height - 100;
		var width = idRange.offsetWidth + 100;
		if (width > width_max) width = width_max;
		var height = idRange.offsetHeight + 80;
		if (height > height_max) height = height_max;
		WindowResizeTo(width, height);
	}

	// Действия при старте программы
	function on_load(){
		document.title = idXMLViewer.applicationName.replace(/_/g,' ') + ' v.' + idXMLViewer.version;
		// парсинг командной строки
		var fname = idXMLViewer.commandLine;
		fname = (/^"/.test(fname)) ? (fname.replace(/^"[^"]+"\s*/, '')) : (fname.replace(/^[^\s]+\s*/, ''));
		fname = fname.replace(/^"(.+)"$/, '$1');
		if (!fname) {
			idFileName.click(); // диалог выбора имени файла
			fname = idFileName.value;
			if (!fname) self.close();
		}
		document.title = fname + ' - ' + document.title;

		// загрузка XML документа
		var xmlDoc = new ActiveXObject("Msxml2.DOMDocument");
		xmlDoc.async = false;
		xmlDoc.load (fname);
		var err = xmlDoc.parseError;
		if (err.errorCode) {
			// показ XML как текста
			ParseError(fname, err);
		} else {
			// парсинг XML документа
			var oUL = CreateElement(idRange, 'UL');
			ParseNode (xmlDoc.documentElement, oUL);
			// добавляем эвент для свертки строк
			document.onclick = function() {
				var parentLI = GetParent(event.srcElement, 'LI');
				if (parentLI) ShowHide(parentLI);
			};
		}
		WindowSetSize();
		setTimeout('idHelp.style.display="none"', 2000); // через 2 секунды скрываем подсказку
	}
</script>
</head>
<body onload="on_load()" onkeydown="OnKeyDown();">
	<table><tr><td id="idRange"></table>
	<input id="idFileName" type="file" style="display:none;">
	<div id="idHelp" class="help">
		<table class="help">
			<tr><td class="key">&nbsp;Esc<td class="text">&nbsp;Exit Program
			<tr><td class="key">&nbsp;F1<td class="text">&nbsp;This Help
			<tr><td class="key">&nbsp;F10<td class="text">&nbsp;Set Associate XML-files&nbsp;
		</table>
	</div>
</body>
<script type="text/javascript">
	// Чтение текстового файла
	function ReadFile(filename, codepage) {
		var content = '';
		var FSO = new ActiveXObject("Scripting.FileSystemObject");
		if (FSO.FileExists(filename)) {
			if (FSO.GetFile(filename).Size > 0) {
				with (new ActiveXObject("ADODB.Stream")) {
					type = 2; // adTypeText
					charset = codepage;
					open();
					loadFromFile(filename);
					content = readText();
					close();
				}
			}
		}
		return content;
	}

	// Обработка ошибки загрузки (показ XML как текста)
	function ParseError(fname, err){
		var text = ReadFile(fname, 'windows-1251');
		if (/Р.Р.Р./.test(text)) text = ReadFile(fname, 'utf-8');
		var arrXML = text.split('\n');
		var oUL = CreateElement(idRange, 'UL');
		for(var i = 0, line; line = arrXML[i++];) {
			var oLI = CreateElement(oUL, 'LI', {className:'srctext'});
			if (i == err.line) { // подсветка строки с ошибкой
				oLI.style.backgroundColor = "yellow"; 
				var err_line_text = line.match(new RegExp('^(.{'+(err.linepos-1)+'})(.*)$'));
				var oSPAN = CreateElement(oLI, 'SPAN', {className:'srctext', innerText:err_line_text[1]});
				CreateElement(oSPAN, 'SPAN', {className:'errtext', innerText:err_line_text[2]}); // текст после ошибочного символа
				CreateElement(CreateElement(oLI, 'UL'), 'LI', {className:'reason', innerText:err.reason}); // пояснение о причине ошибки
			} else {
				oSPAN = CreateElement(oLI, 'SPAN', {className:'srctext', innerText:line});
			}
		}
	}

	// Связывание программы с xml файлами
	function SetFileAssociation(){
		var WshShell = new ActiveXObject("WScript.Shell");
		var xml_viever_cmd = 'mshta.exe "' + unescape(document.URL).replace(/^file:\/\/(.+)$/, '$1') + '" %1';
		var cmd = WshShell.RegRead('HKCR\\xmlfile\\shell\\Open\\command\\');
		if (cmd != xml_viever_cmd) {
			if (WshShell.Popup('Associate XML-files with the XMLViewer?', 0, "Set file association", 36) == 6) {
				var default_reg = unescape(document.URL).replace(/^file:\/\/(.+?)[^\\]+$/, '$1') + 'return_xml_association.reg';
				WshShell.Run('regedit \/E "' + default_reg + '" "HKEY_CLASSES_ROOT\\xmlfile\\shell\\Open"', 0, true);
				RegDeleteKeys("HKCR\\xmlfile\\shell\\Open\\ddeexec");
				WshShell.RegWrite('HKCR\\xmlfile\\shell\\Open\\command\\', xml_viever_cmd, 'REG_EXPAND_SZ');
			}
		}
	}

	// Удаление ключа реестра (включая все вложенные)
	function RegDeleteKeys(strFullPath){
		function DeleteSubkeys (subKey){
			var oMethod = oReg.Methods_.Item("EnumKey");
			var oInParam = oMethod.InParameters.SpawnInstance_();
			oInParam.hDefKey = defKey;
			oInParam.sSubKeyName = subKey;
			var oOutParam = oReg.ExecMethod_(oMethod.Name, oInParam);
			if (oOutParam.sNames != null) {
				var aNames = oOutParam.sNames.toArray();
				for (var i=0, keyName; keyName = aNames[i++];) {
					DeleteSubkeys(subKey + "\\" + keyName);
				}
			}
			oReg.DeleteKey (defKey, subKey);
		}
		// ----------------------------------------------------------------
		var aKeyPath = strFullPath.match(/^([\w_]+)\\(.+)$/);
		if (!aKeyPath) return;
		var aRoot = {HKEY_LOCAL_MACHINE:  0x80000002, HKLM: 0x80000002
					,HKEY_USERS:          0x80000003, HKU:  0x80000003
					,HKEY_CURRENT_USER:   0x80000001, HKCU: 0x80000001
					,HKEY_CLASSES_ROOT:   0x80000000, HKCR: 0x80000000
					,HKEY_CURRENT_CONFIG: 0x80000005, HKCC: 0x80000005}
		var defKey = aRoot[aKeyPath[1]];
		if (!defKey) return;
		var oReg = GetObject("winmgmts:\\\\.\\root\\default:StdRegProv");
		DeleteSubkeys (aKeyPath[2]);
	}
</script>
</html>
